// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dolt/services/eventsapi/v1alpha1/event_constants.proto

package eventsapi

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Platform int32

const (
	Platform_PLATFORM_UNSPECIFIED Platform = 0
	Platform_LINUX                Platform = 1
	Platform_WINDOWS              Platform = 2
	Platform_DARWIN               Platform = 3
)

var Platform_name = map[int32]string{
	0: "PLATFORM_UNSPECIFIED",
	1: "LINUX",
	2: "WINDOWS",
	3: "DARWIN",
}

var Platform_value = map[string]int32{
	"PLATFORM_UNSPECIFIED": 0,
	"LINUX":                1,
	"WINDOWS":              2,
	"DARWIN":               3,
}

func (x Platform) String() string {
	return proto.EnumName(Platform_name, int32(x))
}

func (Platform) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d970d881fa70959f, []int{0}
}

type ClientEventType int32

const (
	ClientEventType_TYPE_UNSPECIFIED                 ClientEventType = 0
	ClientEventType_INIT                             ClientEventType = 1
	ClientEventType_STATUS                           ClientEventType = 2
	ClientEventType_ADD                              ClientEventType = 3
	ClientEventType_RESET                            ClientEventType = 4
	ClientEventType_COMMIT                           ClientEventType = 5
	ClientEventType_SQL                              ClientEventType = 6
	ClientEventType_SQL_SERVER                       ClientEventType = 7
	ClientEventType_LOG                              ClientEventType = 8
	ClientEventType_DIFF                             ClientEventType = 9
	ClientEventType_MERGE                            ClientEventType = 10
	ClientEventType_BRANCH                           ClientEventType = 11
	ClientEventType_CHECKOUT                         ClientEventType = 12
	ClientEventType_REMOTE                           ClientEventType = 13
	ClientEventType_PUSH                             ClientEventType = 14
	ClientEventType_PULL                             ClientEventType = 15
	ClientEventType_FETCH                            ClientEventType = 16
	ClientEventType_CLONE                            ClientEventType = 17
	ClientEventType_LOGIN                            ClientEventType = 18
	ClientEventType_VERSION                          ClientEventType = 19
	ClientEventType_CONFIG                           ClientEventType = 20
	ClientEventType_LS                               ClientEventType = 21
	ClientEventType_SCHEMA                           ClientEventType = 22
	ClientEventType_TABLE_IMPORT                     ClientEventType = 23
	ClientEventType_TABLE_EXPORT                     ClientEventType = 24
	ClientEventType_TABLE_CREATE                     ClientEventType = 25
	ClientEventType_TABLE_RM                         ClientEventType = 26
	ClientEventType_TABLE_MV                         ClientEventType = 27
	ClientEventType_TABLE_CP                         ClientEventType = 28
	ClientEventType_TABLE_SELECT                     ClientEventType = 29
	ClientEventType_TABLE_PUT_ROW                    ClientEventType = 30
	ClientEventType_TABLE_RM_ROW                     ClientEventType = 31
	ClientEventType_CREDS_NEW                        ClientEventType = 32
	ClientEventType_CREDS_RM                         ClientEventType = 33
	ClientEventType_CREDS_LS                         ClientEventType = 34
	ClientEventType_CONF_CAT                         ClientEventType = 35
	ClientEventType_CONF_RESOLVE                     ClientEventType = 36
	ClientEventType_REMOTEAPI_GET_REPO_METADATA      ClientEventType = 37
	ClientEventType_REMOTEAPI_HAS_CHUNKS             ClientEventType = 38
	ClientEventType_REMOTEAPI_GET_DOWNLOAD_LOCATIONS ClientEventType = 39
	ClientEventType_REMOTEAPI_GET_UPLOAD_LOCATIONS   ClientEventType = 40
	ClientEventType_REMOTEAPI_REBASE                 ClientEventType = 41
	ClientEventType_REMOTEAPI_ROOT                   ClientEventType = 42
	ClientEventType_REMOTEAPI_COMMIT                 ClientEventType = 43
	ClientEventType_REMOTEAPI_LIST_TABLE_FILES       ClientEventType = 44
	ClientEventType_BLAME                            ClientEventType = 45
	ClientEventType_CREDS_CHECK                      ClientEventType = 46
	ClientEventType_CREDS_USE                        ClientEventType = 47
	ClientEventType_CREDS_IMPORT                     ClientEventType = 48
)

var ClientEventType_name = map[int32]string{
	0:  "TYPE_UNSPECIFIED",
	1:  "INIT",
	2:  "STATUS",
	3:  "ADD",
	4:  "RESET",
	5:  "COMMIT",
	6:  "SQL",
	7:  "SQL_SERVER",
	8:  "LOG",
	9:  "DIFF",
	10: "MERGE",
	11: "BRANCH",
	12: "CHECKOUT",
	13: "REMOTE",
	14: "PUSH",
	15: "PULL",
	16: "FETCH",
	17: "CLONE",
	18: "LOGIN",
	19: "VERSION",
	20: "CONFIG",
	21: "LS",
	22: "SCHEMA",
	23: "TABLE_IMPORT",
	24: "TABLE_EXPORT",
	25: "TABLE_CREATE",
	26: "TABLE_RM",
	27: "TABLE_MV",
	28: "TABLE_CP",
	29: "TABLE_SELECT",
	30: "TABLE_PUT_ROW",
	31: "TABLE_RM_ROW",
	32: "CREDS_NEW",
	33: "CREDS_RM",
	34: "CREDS_LS",
	35: "CONF_CAT",
	36: "CONF_RESOLVE",
	37: "REMOTEAPI_GET_REPO_METADATA",
	38: "REMOTEAPI_HAS_CHUNKS",
	39: "REMOTEAPI_GET_DOWNLOAD_LOCATIONS",
	40: "REMOTEAPI_GET_UPLOAD_LOCATIONS",
	41: "REMOTEAPI_REBASE",
	42: "REMOTEAPI_ROOT",
	43: "REMOTEAPI_COMMIT",
	44: "REMOTEAPI_LIST_TABLE_FILES",
	45: "BLAME",
	46: "CREDS_CHECK",
	47: "CREDS_USE",
	48: "CREDS_IMPORT",
}

var ClientEventType_value = map[string]int32{
	"TYPE_UNSPECIFIED":                 0,
	"INIT":                             1,
	"STATUS":                           2,
	"ADD":                              3,
	"RESET":                            4,
	"COMMIT":                           5,
	"SQL":                              6,
	"SQL_SERVER":                       7,
	"LOG":                              8,
	"DIFF":                             9,
	"MERGE":                            10,
	"BRANCH":                           11,
	"CHECKOUT":                         12,
	"REMOTE":                           13,
	"PUSH":                             14,
	"PULL":                             15,
	"FETCH":                            16,
	"CLONE":                            17,
	"LOGIN":                            18,
	"VERSION":                          19,
	"CONFIG":                           20,
	"LS":                               21,
	"SCHEMA":                           22,
	"TABLE_IMPORT":                     23,
	"TABLE_EXPORT":                     24,
	"TABLE_CREATE":                     25,
	"TABLE_RM":                         26,
	"TABLE_MV":                         27,
	"TABLE_CP":                         28,
	"TABLE_SELECT":                     29,
	"TABLE_PUT_ROW":                    30,
	"TABLE_RM_ROW":                     31,
	"CREDS_NEW":                        32,
	"CREDS_RM":                         33,
	"CREDS_LS":                         34,
	"CONF_CAT":                         35,
	"CONF_RESOLVE":                     36,
	"REMOTEAPI_GET_REPO_METADATA":      37,
	"REMOTEAPI_HAS_CHUNKS":             38,
	"REMOTEAPI_GET_DOWNLOAD_LOCATIONS": 39,
	"REMOTEAPI_GET_UPLOAD_LOCATIONS":   40,
	"REMOTEAPI_REBASE":                 41,
	"REMOTEAPI_ROOT":                   42,
	"REMOTEAPI_COMMIT":                 43,
	"REMOTEAPI_LIST_TABLE_FILES":       44,
	"BLAME":                            45,
	"CREDS_CHECK":                      46,
	"CREDS_USE":                        47,
	"CREDS_IMPORT":                     48,
}

func (x ClientEventType) String() string {
	return proto.EnumName(ClientEventType_name, int32(x))
}

func (ClientEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d970d881fa70959f, []int{1}
}

type MetricID int32

const (
	MetricID_METRIC_UNSPECIFIED  MetricID = 0
	MetricID_BYTES_DOWNLOADED    MetricID = 1
	MetricID_DOWNLOAD_MS_ELAPSED MetricID = 2
	MetricID_REMOTEAPI_RPC_ERROR MetricID = 3
)

var MetricID_name = map[int32]string{
	0: "METRIC_UNSPECIFIED",
	1: "BYTES_DOWNLOADED",
	2: "DOWNLOAD_MS_ELAPSED",
	3: "REMOTEAPI_RPC_ERROR",
}

var MetricID_value = map[string]int32{
	"METRIC_UNSPECIFIED":  0,
	"BYTES_DOWNLOADED":    1,
	"DOWNLOAD_MS_ELAPSED": 2,
	"REMOTEAPI_RPC_ERROR": 3,
}

func (x MetricID) String() string {
	return proto.EnumName(MetricID_name, int32(x))
}

func (MetricID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d970d881fa70959f, []int{2}
}

type AttributeID int32

const (
	AttributeID_ATTRIBUTE_UNSPECIFIED AttributeID = 0
	AttributeID_REMOTE_URL_SCHEME     AttributeID = 2
)

var AttributeID_name = map[int32]string{
	0: "ATTRIBUTE_UNSPECIFIED",
	2: "REMOTE_URL_SCHEME",
}

var AttributeID_value = map[string]int32{
	"ATTRIBUTE_UNSPECIFIED": 0,
	"REMOTE_URL_SCHEME":     2,
}

func (x AttributeID) String() string {
	return proto.EnumName(AttributeID_name, int32(x))
}

func (AttributeID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d970d881fa70959f, []int{3}
}

type AppID int32

const (
	AppID_APP_ID_UNSPECIFIED AppID = 0
	AppID_APP_DOLT           AppID = 1
)

var AppID_name = map[int32]string{
	0: "APP_ID_UNSPECIFIED",
	1: "APP_DOLT",
}

var AppID_value = map[string]int32{
	"APP_ID_UNSPECIFIED": 0,
	"APP_DOLT":           1,
}

func (x AppID) String() string {
	return proto.EnumName(AppID_name, int32(x))
}

func (AppID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d970d881fa70959f, []int{4}
}

func init() {
	proto.RegisterEnum("dolt.services.eventsapi.v1alpha1.Platform", Platform_name, Platform_value)
	proto.RegisterEnum("dolt.services.eventsapi.v1alpha1.ClientEventType", ClientEventType_name, ClientEventType_value)
	proto.RegisterEnum("dolt.services.eventsapi.v1alpha1.MetricID", MetricID_name, MetricID_value)
	proto.RegisterEnum("dolt.services.eventsapi.v1alpha1.AttributeID", AttributeID_name, AttributeID_value)
	proto.RegisterEnum("dolt.services.eventsapi.v1alpha1.AppID", AppID_name, AppID_value)
}

func init() {
	proto.RegisterFile("dolt/services/eventsapi/v1alpha1/event_constants.proto", fileDescriptor_d970d881fa70959f)
}

var fileDescriptor_d970d881fa70959f = []byte{
	// 772 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xcb, 0x72, 0xdb, 0x36,
	0x14, 0xad, 0xfc, 0x90, 0x65, 0xf8, 0x75, 0x8d, 0xd8, 0x79, 0xb6, 0x8e, 0xeb, 0xa6, 0x2f, 0xb5,
	0x16, 0x9b, 0xe9, 0x4c, 0x37, 0x5d, 0x41, 0xe0, 0x95, 0x84, 0x09, 0x48, 0x30, 0x00, 0x68, 0x25,
	0xdd, 0x60, 0x64, 0x85, 0x75, 0xd8, 0x51, 0x24, 0x55, 0xa2, 0x3d, 0xd3, 0xbf, 0xe9, 0xa7, 0x76,
	0x40, 0x26, 0x62, 0xac, 0x4d, 0x77, 0x3c, 0xe7, 0xde, 0x73, 0x08, 0x1c, 0x5c, 0x80, 0xfc, 0xf6,
	0x6e, 0x36, 0x29, 0x82, 0x65, 0xb6, 0xb8, 0xcb, 0xc7, 0xd9, 0x32, 0xc8, 0xee, 0xb2, 0x69, 0xb1,
	0x1c, 0xcd, 0xf3, 0xe0, 0xee, 0xe5, 0x68, 0x32, 0x7f, 0x3f, 0x7a, 0x59, 0x51, 0x6e, 0x3c, 0x9b,
	0x2e, 0x8b, 0xd1, 0xb4, 0x58, 0x76, 0xe6, 0x8b, 0x59, 0x31, 0xa3, 0xe7, 0x5e, 0xd7, 0xf9, 0xa4,
	0xeb, 0xac, 0x74, 0x9d, 0x4f, 0xba, 0xf6, 0x80, 0xb4, 0x92, 0xc9, 0xa8, 0xf8, 0x73, 0xb6, 0xf8,
	0x40, 0x1f, 0x93, 0x93, 0x44, 0x32, 0xdb, 0x53, 0x3a, 0x72, 0x69, 0x6c, 0x12, 0xe4, 0xa2, 0x27,
	0x30, 0x84, 0x2f, 0xe8, 0x2e, 0xd9, 0x96, 0x22, 0x4e, 0xdf, 0x40, 0x83, 0xee, 0x91, 0x9d, 0xa1,
	0x88, 0x43, 0x35, 0x34, 0xb0, 0x41, 0x09, 0x69, 0x86, 0x4c, 0x0f, 0x45, 0x0c, 0x9b, 0xed, 0x7f,
	0x9b, 0xe4, 0x88, 0x4f, 0xf2, 0x6c, 0x5a, 0xa0, 0xff, 0x8d, 0xfd, 0x67, 0x9e, 0xd1, 0x13, 0x02,
	0xf6, 0x6d, 0x82, 0x6b, 0x6e, 0x2d, 0xb2, 0x25, 0x62, 0x61, 0xa1, 0xe1, 0xf5, 0xc6, 0x32, 0x9b,
	0x7a, 0xaf, 0x1d, 0xb2, 0xc9, 0xc2, 0x10, 0x36, 0xfd, 0xcf, 0x34, 0x1a, 0xb4, 0xb0, 0xe5, 0xeb,
	0x5c, 0x45, 0x91, 0xb0, 0xb0, 0xed, 0xeb, 0xe6, 0xb5, 0x84, 0x26, 0x3d, 0x24, 0xc4, 0xbc, 0x96,
	0xce, 0xa0, 0xbe, 0x42, 0x0d, 0x3b, 0xbe, 0x20, 0x55, 0x1f, 0x5a, 0xde, 0x37, 0x14, 0xbd, 0x1e,
	0xec, 0x7a, 0x8b, 0x08, 0x75, 0x1f, 0x81, 0x78, 0x8b, 0xae, 0x66, 0x31, 0x1f, 0xc0, 0x1e, 0xdd,
	0x27, 0x2d, 0x3e, 0x40, 0xfe, 0x4a, 0xa5, 0x16, 0xf6, 0x7d, 0x45, 0x63, 0xa4, 0x2c, 0xc2, 0x81,
	0x97, 0x26, 0xa9, 0x19, 0xc0, 0x61, 0xf5, 0x25, 0x25, 0x1c, 0x79, 0x93, 0x1e, 0x5a, 0x3e, 0x00,
	0xf0, 0x9f, 0x5c, 0xaa, 0x18, 0xe1, 0xb8, 0x8c, 0x42, 0xf5, 0x45, 0x0c, 0xd4, 0x47, 0x71, 0x85,
	0xda, 0x08, 0x15, 0xc3, 0x83, 0x6a, 0xa9, 0x71, 0x4f, 0xf4, 0xe1, 0x84, 0x36, 0xc9, 0x86, 0x34,
	0x70, 0x5a, 0x6e, 0x8f, 0x0f, 0x30, 0x62, 0xf0, 0x90, 0x02, 0xd9, 0xb7, 0xac, 0x2b, 0xd1, 0x89,
	0x28, 0x51, 0xda, 0xc2, 0xa3, 0x9a, 0xc1, 0x37, 0x25, 0xf3, 0xb8, 0x66, 0xb8, 0x46, 0x66, 0x11,
	0x9e, 0xf8, 0x15, 0x57, 0x8c, 0x8e, 0xe0, 0x69, 0x8d, 0xa2, 0x2b, 0x78, 0x56, 0x23, 0x9e, 0xc0,
	0x97, 0xb5, 0xd6, 0xa0, 0x44, 0x6e, 0xe1, 0x2b, 0x7a, 0x4c, 0x0e, 0x2a, 0x26, 0x49, 0xad, 0xd3,
	0x6a, 0x08, 0x67, 0x75, 0x93, 0x8e, 0x4a, 0xe6, 0x39, 0x3d, 0x20, 0xbb, 0x5c, 0x63, 0x68, 0x5c,
	0x8c, 0x43, 0x38, 0x2f, 0x13, 0x2a, 0xa1, 0x8e, 0xe0, 0xeb, 0x1a, 0x49, 0x03, 0x17, 0x25, 0x52,
	0x71, 0xcf, 0x71, 0x66, 0xe1, 0x1b, 0x6f, 0x55, 0x22, 0x8d, 0x46, 0xc9, 0x2b, 0x84, 0x17, 0xf4,
	0x39, 0x79, 0x56, 0xe5, 0xc9, 0x12, 0xe1, 0xfa, 0x68, 0x9d, 0xc6, 0x44, 0xb9, 0x08, 0x2d, 0x0b,
	0x99, 0x65, 0xf0, 0xad, 0x9f, 0xaf, 0xba, 0x61, 0xc0, 0x8c, 0xe3, 0x83, 0x34, 0x7e, 0x65, 0xe0,
	0x3b, 0xfa, 0x82, 0x9c, 0xdf, 0x97, 0x86, 0x6a, 0x18, 0x4b, 0xc5, 0x42, 0x27, 0x15, 0x67, 0x56,
	0xa8, 0xd8, 0xc0, 0xf7, 0xf4, 0x82, 0x9c, 0xdd, 0xef, 0x4a, 0x93, 0xb5, 0x9e, 0x1f, 0xfc, 0xc4,
	0xd5, 0x3d, 0x1a, 0xbb, 0xcc, 0x20, 0xfc, 0x48, 0x29, 0x39, 0xfc, 0x8c, 0x55, 0xca, 0x42, 0xfb,
	0x7e, 0xe7, 0xc7, 0x29, 0xfb, 0x89, 0x9e, 0x91, 0xa7, 0x35, 0x2b, 0x85, 0xb1, 0xae, 0x0a, 0xac,
	0x27, 0x24, 0x1a, 0xf8, 0xd9, 0x1f, 0x7f, 0x57, 0xb2, 0x08, 0xe1, 0x92, 0x1e, 0x91, 0xbd, 0x2a,
	0x9d, 0x72, 0xa6, 0xa0, 0x53, 0x67, 0x99, 0x1a, 0x84, 0xa0, 0x4c, 0xa8, 0x84, 0x1f, 0x4f, 0xfc,
	0x97, 0xf6, 0x5f, 0xa4, 0x15, 0x65, 0xc5, 0x22, 0x1f, 0x8b, 0x90, 0x3e, 0x24, 0x34, 0x42, 0xab,
	0x05, 0x5f, 0xbb, 0x1c, 0x27, 0x04, 0xba, 0x6f, 0x2d, 0x9a, 0x55, 0x04, 0x18, 0x42, 0x83, 0x3e,
	0x22, 0x0f, 0x56, 0x91, 0x44, 0xc6, 0xa1, 0x64, 0x89, 0xc1, 0x10, 0x36, 0x7c, 0xe1, 0xb3, 0x9d,
	0x25, 0xdc, 0xa1, 0xd6, 0x4a, 0xc3, 0x66, 0x1b, 0xc9, 0x1e, 0x2b, 0x8a, 0x45, 0x7e, 0x7d, 0x5b,
	0x64, 0x22, 0xa4, 0x4f, 0xc8, 0x29, 0xb3, 0x56, 0x8b, 0x6e, 0x6a, 0xd7, 0xaf, 0xe3, 0x29, 0x39,
	0xae, 0x2c, 0x5c, 0xaa, 0xa5, 0x2b, 0x07, 0x16, 0x61, 0xe3, 0x62, 0xab, 0xd5, 0x80, 0x46, 0xfb,
	0x92, 0x6c, 0xb3, 0xf9, 0xbc, 0x5a, 0x2f, 0x4b, 0x12, 0x27, 0xc2, 0x35, 0xf5, 0x3e, 0x69, 0x79,
	0x3e, 0x54, 0xd2, 0x42, 0xa3, 0x3b, 0xfc, 0x23, 0xbd, 0xc9, 0x8b, 0xf7, 0xb7, 0xd7, 0x9d, 0xf1,
	0xec, 0x43, 0x30, 0xc9, 0xff, 0xbe, 0xcd, 0xdf, 0x8d, 0x8a, 0xd1, 0x65, 0x3e, 0x1d, 0x07, 0xe5,
	0x1b, 0x76, 0x33, 0x0b, 0x6e, 0xb2, 0x69, 0x50, 0x3e, 0x4f, 0xc1, 0xff, 0xbd, 0x6a, 0xbf, 0xaf,
	0xa8, 0xeb, 0x66, 0xa9, 0xf8, 0xf5, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x04, 0xe0, 0xf2, 0x36,
	0x0a, 0x05, 0x00, 0x00,
}
